
[background]
ROM:000A8F50                 lea     bg_data(pc,d0.w),a1
ROM:000A8F54                 move.l  (a1)+,$6E(a0)
ROM:000A8F58                 move.l  (a1)+,$54(a0)


[animation]
ROM:00108D76                 dc.w $F86               ; frame
ROM:00108D78                 dc.b   1
ROM:00108D79                 dc.b $12
ROM:00108D7A                 dc.w $F66               ; frame
ROM:00108D7C                 dc.b   2
ROM:00108D7D                 dc.b   8
ROM:00108D7E                 dc.w $FD4               ; frame
ROM:00108D80                 dc.b   3
ROM:00108D81                 dc.b $11
ROM:00108D82                 dc.w $F5E
ROM:00108D84                 dc.b   4
ROM:00108D85                 dc.b $88                ; &0x80 end
ROM:00108D86                 dc.w $FFF0              ; link to first frame

anim in $BC
ROM:0007A36A                 movea.l $BC(a6),a0
ROM:0007A36E                 jsr     (obj_load_anim_d0).l


ROM:000011E8 sub_11E8:                               ; CODE XREF: ROM:0007FAA4��p
ROM:000011E8                                         ; ROM:0007FEA2��p ...
ROM:000011E8                 subq.b  #1,$10(a6)
ROM:000011EC                 bne.w   locret_1210
ROM:000011F0                 movea.l $16(a6),a0
ROM:000011F4
ROM:000011F4 loc_11F4:                               ; CODE XREF: sub_11E0+6��j
ROM:000011F4                 move.w  (a0)+,d0
ROM:000011F6                 move.b  (a0)+,$11(a6)
ROM:000011FA                 move.b  (a0)+,d1
ROM:000011FC                 bmi.w   loc_1212
ROM:00001200                 move.b  d1,$10(a6)
ROM:00001204                 move.l  a0,$16(a6)			; anim?
ROM:00001208                 lea     -4(a0,d0.w),a0
ROM:0000120C                 move.l  a0,$12(a6)


a1 = 1069ac (tile) 
a2 = 109d36 (sprite)


[collision]
ROM:00091980 loc_91980:                              ; CODE XREF: ROM:00091908��j
ROM:00091980                                         ; ROM:00091910��j ...
ROM:00091980                 movea.l $30(a4),a0
ROM:00091984                 adda.w  $3C(a4),a0	// maybe collision box
ROM:00091988                 move.w  $28(a6),d1
ROM:0009198C                 sub.w   $28(a4),d1
ROM:00091990                 sub.w   (a0)+,d1
ROM:00091992                 cmp.w   (a0)+,d1
ROM:00091994                 bhi.w   loc_9185C
ROM:00091998                 move.w  (a0)+,d1
ROM:0009199A                 move.w  (a0)+,d2

ROM:00091A14                 movea.l $30(a6),a1	// colission box
ROM:00091A18                 adda.w  $3E(a6),a1



wp ffff8e7a,4,w
	->

ROM:00001180 obj_load_anim:                          ; CODE XREF: obj_load_anim_d0+6��j
ROM:00001180                                         ; ROM:loc_75108��p ...
ROM:00001180                 move.w  (a0)+,d0
ROM:00001182                 move.b  (a0)+,$11(a6)
ROM:00001186                 move.b  (a0)+,d1
ROM:00001188                 bmi.w   loc_11AE
ROM:0000118C                 move.b  d1,$10(a6)
ROM:00001190                 move.l  a0,$16(a6)
ROM:00001194                 lea     -4(a0,d0.w),a0
ROM:00001198                 move.l  a0,$12(a6)      ; set  sprite
ROM:0000119C                 move.w  -(a0),$1C(a6)
ROM:000011A0                 move.w  -(a0),$1A(a6)
ROM:000011A4                 move.w  -(a0),$3C(a6)   ; set collision box
ROM:000011A8                 move.w  -(a0),$3E(a6)   ; set collision box



ROM:000754B8 loc_754B8:                              ; CODE XREF: ROM:000754A8��j
ROM:000754B8                 move.b  #1,$7F(a6)
ROM:000754BE                 move.l  #unk_75816,$30(a6)		; collision base, how to match??
ROM:000754C6                 move.l  #unk_B5606,$8E(a6)
ROM:000754CE                 movea.l #unk_CB668,a0
ROM:000754D4                 moveq   #$13,d0
ROM:000754D6                 jsr     (obj_load_anim_d0).l
ROM:000754DC                 move.b  $11(a6),$B5(a6)

a6 = obj = ffff8e68


a1=106890

a0 = ffff8b10
a6=ffffbbe8


ffffbca8 chair

ffff8e68 man
20=x
28=y
24=z


map1 ram FFFF7a88
map2 ram FFFF7b88

ROM:0001922A                 move.l  (a1)+,$80(a0)
ROM:0001922E                 move.l  (a1)+,$A4(a0)   ; map tile index
ROM:00019232                 move.l  (a1)+,$84(a0)   ; map tile data





level 1 scene 1 

ffffbca8 chair

ffff8e68 man  sprite = 109cfc
20=x
28=y
24=z




Memory Map
The following is a memory map that was generated based on the MAME source code (.180).  This information is only as accurate as the MAME driver is.  If you see any errors, please let me know what that error is.
 
The Memory Area is related to where the information is from (CPU, Sound Board, etc..), and it may also reflect what it has in common with other hardware.
The Punisher (Capcom, 1993)

Memory Area:main_map
Address Range	Length	Function	Description
0x0000-0x3FFFFF	4194304	ROM	
0x800000-0x800007	8	Read Port	IN1 (/* Player input ports */)
0x800018-0x80001F	8	Read	cps1_dsw_r (/* System input ports / Dip Switches */)
0x800020-0x800021	2	Read NOP	(/* ? Used by Rockman ? not mapped according to PAL */)
0x800030-0x800037	8	Write	cps1_coinctrl_w
0x800100-0x80013F	64	Write, Shared	cps1_cps_a_w, cps_a_regs (/* CPS-A custom */)
0x800140-0x80017F	64	Read/Write, Shared	cps1_cps_b_r, cps1_cps_b_w, cps_b_regs
0x800180-0x800187	8	Write	cps1_soundlatch_w (/* Sound command */)
0x800188-0x80018F	8	Write	cps1_soundlatch2_w (/* Sound timer fade */)
0x900000-0x92FFFF	196608	RAM Write, Shared	cps1_gfxram_w, gfxram (/* SF2CE executes code from here */)
0xFF0000-0xFFFFFF	65536	RAM, Shared	mainram
Memory Area:qsound_main_map
Address Range	Length	Function	Description
0x0000-0x1FFFFF	2097152	ROM	
0x800000-0x800007	8	Read Port	IN1 (/* Player input ports */)
0x800018-0x80001F	8	Read	cps1_dsw_r (/* System input ports / Dip Switches */)
0x800030-0x800037	8	Write	cps1_coinctrl_w
0x800100-0x80013F	64	Write, Shared	cps1_cps_a_w, cps_a_regs (/* CPS-A custom */)
0x800140-0x80017F	64	Read/Write, Shared	cps1_cps_b_r, cps1_cps_b_w, cps_b_regs (/* CPS-B custom (mapped by LWIO/IOB1 PAL on B-board) */)
0x900000-0x92FFFF	196608	RAM Write, Shared	cps1_gfxram_w, gfxram (/* SF2CE executes code from here */)
0xF00000-0xF0FFFF	65536	Read	qsound_rom_r (/* Slammasters protection */)
0xF18000-0xF19FFF	8192	Read/Write	qsound_sharedram1_r, qsound_sharedram1_w (/* Q RAM */)
0xF1C000-0xF1C001	2	Read Port	IN2 (/* Player 3 controls (later games) */)
0x00ff	Unused	Active Low
0xF1C002-0xF1C003	2	Read Port	IN3 (/* Player 4 controls ("Muscle Bombers") */)
0x00ff	Unused	Active Low
0xF1C004-0xF1C005	2	Write	cpsq_coinctrl2_w (/* Coin control2 (later games) */)
0xF1C006-0xF1C007	2	Read Port, Write Port	EEPROMIN, EEPROMOUT
0xF1E000-0xF1FFFF	8192	Read/Write	qsound_sharedram2_r, qsound_sharedram2_w (/* Q RAM */)
0xFF0000-0xFFFFFF	65536	RAM, Shared	mainram
Memory Area:qsound_sub_map
Address Range	Length	Function	Description
0x0000-0x7FFF	32768	ROM	
0x8000-0xBFFF	16384	ROM Bank	bank1 (/* banked (contains music data) */)
0xC000-0xCFFF	4096	RAM, Shared	qsound_ram1
0xD000-0xD002	3	Device Write	qsound, qsound_device, qsound_w
0xD003	1	Write	qsound_banksw_w
0xD007	1	Device Read	qsound, qsound_device, qsound_r
0xF000-0xFFFF	4096	RAM, Shared	qsound_ram2
Memory Area:sub_map
Address Range	Length	Function	Description
0x0000-0x7FFF	32768	ROM	
0x8000-0xBFFF	16384	ROM Bank	bank1
0xD000-0xD7FF	2048	RAM	
0xF000-0xF001	2	Device Read/Write	2151, ym2151_device, read, write
0xF002	1	Device Read/Write	oki, okim6295_device, read, write
0xF004	1	Write	cps1_snd_bankswitch_w
0xF006	1	Write	cps1_oki_pin7_w (/* controls pin 7 of OKI chip */)
0xF008	1	Device Read	soundlatch, generic_latch_8_device, read (/* Sound command */)
0xF00A	1	Device Read	soundlatch2, generic_latch_8_device, read (/* Sound timer fade */)
 
ROM Map for this game
 
This is the ROM map for the game.  This should tell you what address the ROM is at, how big it is, what it's used for.   
Memory Area:aboardplds
Address Range	Length	Label/Location	Description
0x0000-0x0116	279	"buf1"	CRC(eb122de7)
0x0000-0x0116	279	"ioa1"	CRC(59c7ee3b)
0x0000-0x0116	279	"prg2"	CRC(4386879a)
0x0000-0x0116	279	"rom1"	CRC(41dc73b9)
Memory Area:audiocpu
Address Range	Length	Label/Location	Description
0x0000-0x7FFF	32768	"ps_q.5k"	CRC(49ff4446)
Memory Area:bboardplds
Address Range	Length	Label/Location	Description
0x0000-0x0116	279	"ps63b.1a"	
0x0000-0x0116	279	"iob1.12d"	CRC(3abc0700)
0x0000-0x0116	279	"bprg1.11d"	CRC(31793da7)
Memory Area:cboardplds
Address Range	Length	Label/Location	Description
0x0000-0x0116	279	"ioc1.ic1"	CRC(0d182081)
Memory Area:dboardplds
Address Range	Length	Label/Location	Description
0x0000-0x0116	279	"d8l1.8l"	CRC(539fc7da)
0x0000-0x0116	279	"d7l1.7l"	CRC(27b7410d)
0x0000-0x0116	279	"d10f1.10f"	CRC(6619c494)
0x0000-0x0116	279	"d9k2.9k"	CRC(cd85a156)
Memory Area:qsound
Address Range	Length	Label/Location	Description
0x0000-0x7FFFF	524288	"ps-q1.1k"	CRC(31fd8726)
0x80000-0xFFFFF	524288	"ps-q2.2k"	CRC(980a9eef)
0x100000-0x17FFFF	524288	"ps-q3.3k"	CRC(0dd44491)
0x180000-0x1FFFFF	524288	"ps-q4.4k"	CRC(bed42f03)